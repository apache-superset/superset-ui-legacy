(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{2220:function(t,e,n){"use strict";n.r(e),n.d(e,"ROTATION",(function(){return h})),n.d(e,"default",(function(){return l}));var o=n(1),a=n.n(o),i=n(1136),r=n.n(i),c=n(1465);const s=Object(c.createEncoderFactory)({channelTypes:{color:"Color",fontFamily:"Category",fontSize:"Numeric",fontWeight:"Category",text:"Text"},defaultEncoding:{color:{value:"black"},fontFamily:{value:"Helvetica"},fontSize:{value:20},fontWeight:{value:"bold"},text:{value:""}}});function d(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const h={flat:()=>0,random:()=>30*Math.floor(6*Math.random()-3),square:()=>90*Math.floor(2*Math.random())};class l extends a.a.PureComponent{constructor(...t){super(...t),d(this,"isMounted",!1),d(this,"state",{words:[]}),d(this,"createEncoder",s.createSelector()),d(this,"setWords",t=>{this.isMounted&&this.setState({words:t})})}componentDidMount(){this.isMounted=!0,this.update()}componentDidUpdate(t){const{data:e,encoding:n,width:o,height:a,rotation:i}=this.props;t.data===e&&t.encoding===n&&t.width===o&&t.height===a&&t.rotation===i||this.update()}componentWillUnmount(){this.isMounted=!1}update(){const{data:t,width:e,height:n,rotation:o,encoding:a}=this.props,i=this.createEncoder(a);i.setDomainFromDataset(t),r()().size([e,n]).words(t).padding(5).rotate(h[o]||h.flat).text(t=>i.channels.text.getValueFromDatum(t)).font(t=>i.channels.fontFamily.encodeDatum(t,"Helvetica")).fontWeight(t=>i.channels.fontWeight.encodeDatum(t,"normal")).fontSize(t=>i.channels.fontSize.encodeDatum(t,0)).on("end",this.setWords).start()}render(){const{width:t,height:e,encoding:n}=this.props,{words:o}=this.state,i=this.createEncoder(n);return i.channels.color.setDomainFromDataset(o),a.a.createElement("svg",{width:t,height:e},a.a.createElement("g",{transform:"translate(".concat(t/2,",").concat(e/2,")")},o.map(t=>a.a.createElement("text",{key:t.text,fontSize:"".concat(t.size,"px"),fontWeight:t.weight,fontFamily:t.font,fill:i.channels.color.encodeDatum(t,""),textAnchor:"middle",transform:"translate(".concat(t.x,", ").concat(t.y,") rotate(").concat(t.rotate,")")},t.text))))}}d(l,"defaultProps",{encoding:{},rotation:"flat"})}}]);